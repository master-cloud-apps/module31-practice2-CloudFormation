AWSTemplateFormatVersion: 2010-09-09
Description: Practice 2

Parameters:
  AMIId:
    Description: The ami to use (it must be an AMI on the current region and at least be Ubuntu 18.04)
    Type: 'AWS::EC2::Image::Id'
    Default: ami-013f17f36f8b1fefb # By default is Ubuntu 18.04 64-bits in us-east-1
  DBPassword:
    Description: Database password
    Type: String
    NoEcho: true
    MinLength: 8
  BucketName:
    Description: Bucket name
    Type: String
  DownloadAppUrl:
    Description: "Url from the app will be downloaded"
    Type: String
    Default: https://s3.amazonaws.com/practica-2.cloud.michel/app.jar

Resources:
  # Security groups
  EC2EventsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: p2-spring-app-8443
      GroupDescription: "SG for practice 2 spring app with egress port 8443"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '8443'
          ToPort: '8443'
          CidrIp: 0.0.0.0/0
  RDSEventsAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: p2-rds-instance-3306
      GroupDescription: "SG for practice 2 rds instance with egress port 3306"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          SourceSecurityGroupName: !Ref EC2EventsSecurityGroup # Only allow access to instances of this group

  # Roles
  p2EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: "Role with permissions to S3 full access and RDS full data access "
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      RoleName: p2-ec2-role

  # Instance profile
  p2EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref p2EC2Role

  # RDS Instance
  p2RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t2.micro
      AllocatedStorage: 10
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: false
      DBInstanceIdentifier: p2-rds-mysql-instance
      DBName: p2Database
      Engine: mysql
      EngineVersion: 8.0
      MasterUsername: p2DbUsername
      MasterUserPassword: !Ref DBPassword
      MultiAZ: false
      PubliclyAccessible: true
      EnableIAMDatabaseAuthentication: true
      StorageEncrypted: false
      VPCSecurityGroups:
        - !GetAtt RDSEventsAppSecurityGroup.GroupId

  # EC2 instance
  p2EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: "p2-keys"
      ImageId: !Ref AMIId
      InstanceType: "t2.micro"
      SecurityGroupIds:
        - !Ref EC2EventsSecurityGroup
      IamInstanceProfile: !Ref p2EC2InstanceProfile
      UserData:
        Fn::Base64: !Sub
          - |
            #!/bin/bash -ex
            apt update && apt install -y openjdk-11-jre-headless
            export spring_profiles_active=production
            export RDS_ENDPOINT=${RdsEndpoint}
            export RDS_DATABASE=p2Database
            export RDS_USER=p2DbUsername
            export RDS_PASS=${RdsPass}
            export BUCKET_NAME=${BucketName}
            export REGION=eu-west-1
            wget ${JarUrl}
            java -jar app.jar
          - {
              RdsEndpoint: !GetAtt p2RDSInstance.Endpoint.Address,
              RdsPass: !Ref DBPassword,
              BucketName: !Ref BucketName,
              JarUrl: !Ref DownloadAppUrl
            }

Outputs:
  WebSiteURL:
    Value:
      !Join
      - ''
      - - "https://"
        - !GetAtt p2EC2Instance.PublicDnsName
        - ":8443"
        - "/api/events/"
    Description: "Practice 2 - Adding a new event"